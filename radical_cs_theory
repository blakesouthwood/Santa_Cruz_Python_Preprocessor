Blake Southwood Theory For Faster Software Design and Development With A Design Tool

My theory suggests a novel approach to programming by bypassing direct communication with 
the computer and the programming language and instead utilizing a design interface program
to interact with ChatGPT in English.  This approach aims to describe a function's runtime
behavior in a human-readable manner. The function's running behavior is the goal. The 
objective is the human doesn't have to create the function's internal code whatsoever.
 
The generated code in the function operates in readable pseudocode and utilizes methods 
and verb macros to execute. This structured pseudocode converts to a method sequence, 
offering neatly organized solutions that define the internal behavior of functions
and facilitate the desired dynamic behavior. By structuring the code in this way, 
it encourages reuse and minimizes thinking in boolean logic and in code. Additionally,
a pseudocode debugger will aid in identifying and resolving issues during development.
It is also possible to design functions in pseudocode on the fly quickly if desired
since pseudocode is a design level and is runnable.

Overall, this approach proposes a shift towards more intuitive and reusable programming
practices, leveraging natural language communication and structured pseudocode to
streamline the development process and enhance dynamic behavior comprehension.

The main difference is describing the running dynamic behavior of functions instead of how the function 
works internally. The internal function behavior code is generated from the function's running 
behavior description but the internal behavior is generated pseudocode that is actually code















